#运行用户
#user somebody;

#启动进程,通常设置成和cpu的数量相等
# worker_processes  auto;
worker_processes  1; #开发使用单个进程即可


#全局错误日志 
error_log  D:/xampp/htdocs/caibaolicai/logs/error.log;
error_log  D:/xampp/htdocs/caibaolicai/logs/notice.log  notice;
error_log  D:/xampp/htdocs/caibaolicai/logs/info.log  info;

#PID文件，记录当前启动的nginx的进程ID
pid       D:/xampp/htdocs/caibaolicai/logs/nginx.pid;

#工作模式及连接数上限
events {
    worker_connections 1024;    #单个后台worker process进程的最大并发链接数
}

http {
    #设定mime类型,类型由mime.types文件定义
    include       mime.types;
    default_type  application/octet-stream;

    # client_body_temp_path temp/client_body_temp;
    # proxy_temp_path temp/proxy_temp;
    # fastcgi_temp_path temp/fastcgi_temp;

    #设定日志
    log_format  main  '[$remote_addr] - [$remote_user] [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log   D:/xampp/htdocs/caibaolicai/logs/access.log main;
    # access_log off; #disable acces log
    rewrite_log     on;

    #sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，对于普通应用，
    #必须设为 on,如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，以平衡磁盘与网络I/O处理速度，降低系统的uptime.
    sendfile        on;
    #tcp_nopush     on;

    #连接超时时间
    keepalive_timeout  120;
    tcp_nodelay        on;

    #gzip压缩开关
    gzip  on;


    #HTTP服务器
    server {
        #监听80端口，80端口是知名端口号，用于HTTP协议
        listen       8080;
        # listen       8080;

        #定义使用www.xx.com访问
        # server_name  www.helloworld.com;
        server_name  localhost;
        
        index index.html

        #指向webapp的目录
        root D:/xampp/htdocs/caibaolicai;

        #编码格式
        charset utf-8;

        #代理配置参数
        proxy_connect_timeout 180;
        proxy_send_timeout 180;
        proxy_read_timeout 180;
        proxy_set_header Host $host;
        # proxy_set_header X-Forwarder-For $remote_addr;
        

        #反向代理的路径（和upstream绑定），location 后面设置映射的路径
        location / {

            root    D:/xampp/htdocs/caibaolicai; #工程文件夹
            index   index.html; #入口文件
            add_header 'Access-Control-Allow-Origin' '*';
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            error_page 405 =200 $uri;
        }
        #location ~ (.*\.json) {
            #root  D:/xampp/htdocs/caibaolicai;
            error_page 405 =200 $uri;
        #}
        
        location /nginx/ {
            proxy_pass  http://114.80.54.75;
            add_header  'Access-Control-Allow-Origin' '*';
        }

        location ~* \.(eot|ttf|woff|woff2)$ {
            add_header Access-Control-Allow-Origin *;
        }

        #静态文件，nginx自己处理
        #location ~ ^/(images|javascript|js|css|flash|media|static)/ {
            #root D:\01_Workspace\Project\github\zp\SpringNotes\spring-security\spring-shiro\src\main\webapp\views;
            #过期30天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。
            #expires 30d;
        #}

        #设定查看Nginx状态的地址
        location /NginxStatus {
            stub_status           on;
            access_log            on;
            auth_basic            "NginxStatus";
            auth_basic_user_file  conf/htpasswd;
        }

        #禁止访问 .htxxx 文件
        location ~ /\.ht {
            deny all;
        }

        #错误处理页面（可选择性配置）
        #error_page   404              /404.html;
        #error_page   500 502 503 504  /50x.html;
        #location = /50x.html {
        #    root   html;
        #}
    }
}
